services:
  web:
    container_name: web
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    volumes:
      - static_volume:/home/web/app/staticfiles
      - media_volume:/home/web/app/media
    expose:
      - 8000
    env_file:
      - .env
    depends_on:
      - db

  db:
    container_name: db
    image: postgres:latest
    volumes:
      - prod:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=${SQL_DATABASE}

  nginx:
    container_name: server
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - static_volume:/home/web/app/staticfiles
      - media_volume:/home/web/app/media
      - letsencrypt1:/etc/letsencrypt
      - letsencrypt2:/var/lib/letsencrypt
    ports:
      - "443:433"
      - "80:80"
    depends_on:
      - web

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - letsencrypt1:/etc/letsencrypt
      - letsencrypt2:/var/lib/letsencrypt
      - acme-challenge:/var/www/certbot
    command: certonly -d enzo.soares.digital --email enzo@soares.digital --agree-tos --no-eff-email --webroot --webroot-path=/var/www/certbot

volumes:
  prod:
  static_volume:
  media_volume:
  letsencrypt1:
  letsencrypt2:
  acme-challenge: